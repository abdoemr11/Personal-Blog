<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Post extends Model
{
    use HasFactory;
//    protected $guarded
//    protected $fillable =
    protected $guarded = [];
//    public function getRouteKeyName()
//    {
//        return 'slug'; // TODO: Change the autogenerated stub
//    }
    public function scopeFilter($query, array $filters)
    {

        $query->when($filters['search'] ?? false , fn($q, $value) =>
                                $q->where(fn($query)=>
                                $query->where('title', 'like', '%'. $value . '%')
                                    ->orWhere('body', 'like', '%'. $value . '%')));

        $query->when($filters['category'] ?? false , fn($q, $category) =>
            $q->whereHas('category', fn($query)=>
                $query->where('slug', $category))
//            $query
//                ->whereExists(fn($query)=>
//                    $query->from('categories')
//                        ->whereColumn('categories.id', 'posts.category_id')
//                        ->where('categories.slug', $category))
        );
        $query->when($filters['author'] ?? false, fn($q, $author) =>
            $q->whereHas('author', fn($query)=>
                $query->where('name', $author)
            )
        );


    }
    public function category()
    {
        return $this->belongsTo(Category::class);
    }
    public function author() //by default laravel expect the forign key to be author_id which is not true
    {
        //we have to explicity pass it
        return $this->belongsTo(User::class, 'user_id');
    }
}

